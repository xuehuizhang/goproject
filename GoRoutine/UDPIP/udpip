UDP通信：无连接的，不可靠的报文传递  UDP容易丢包   TCP其实也丢包，只是丢包后重传
1，基于UDP传输特点，在传输过程中需要在应用层封装协议做丢包校验，避免丢包，丢包重传

UDP服务器: 默认并发，因此不用起go程
    1,创建用于通信的Socket
    2,不存在监听，直接阻塞读Socket
    3,处理读取的数据
    4,写数据给客户端

总结：
    服务器端：
        1，创建server端地址结构 （IP+Port）
        2，创建用于通信的socket,绑定地址结构 udpConn=net.ListenUDP()
        3，defer udpConn.close()
        4，读取客户端发送数据  ReadFromUDP
        5，写数据给客户端  WriteToUDP

    客户端：
        同TCP客户端

TCP/UDP差异：
    1，TCP对不稳定的网络层，做完全弥补操作
    2，UDP对不稳定的网络层，不作为。
    3，TCP面向连接，UDP面向无连接
    4，TCP要求系统资源较多
    5，TCP使用流式，UDP包式
    6，TCP保证数据准确性，保证数据顺序，通讯速度慢
    使用场景：
        TCP：对数据传输安全性，稳定性要求较高的场合，网络传输，上传，下载
        UDP：对数据实时传输要求较高的场合，视频直播，在线电话会议，游戏

文件传输：
    发送端：
        1，获取文件名 --不包含路径
        2，建立好连接
        3，发送文件名给服务器
        4，接收服务器 回执
        5，判断是否是 ok
        6，是ok发送文件内容 conn.Write

    接收端：
        1，创建监听socket
        2，阻塞等待发送端建立连接请求
        3，接收文件名
        4，回发ok给发送端
        5，接收文件内容，写入到文件中

获取命令行参数：
    os.Args

获取文件属性：
    fileInfo:=os.Stat(path)